import{_ as n,c as s,a,o as t}from"./app-D-YqA8eI.js";const l={};function c(i,e){return t(),s("div",null,e[0]||(e[0]=[a(`<h1 id="üìö-fonctionnalites-avancees-de-kotlin" tabindex="-1"><a class="header-anchor" href="#üìö-fonctionnalites-avancees-de-kotlin"><span>üìö Fonctionnalit√©s avanc√©es de Kotlin</span></a></h1><h2 id="proprietes-deleguees" tabindex="-1"><a class="header-anchor" href="#proprietes-deleguees"><span>Propri√©t√©s d√©l√©gu√©es</span></a></h2><p>Kotlin permet de d√©l√©guer le getter et le setter d&#39;une propri√©t√© √† un autre objet, appel√© d√©l√©gu√©. C&#39;est une classe qui d√©finit les m√©thodes <code>getValue</code> et <code>setValue</code>.</p><p>Kotlin fournit des d√©l√©gu√©s standard tels que des propri√©t√©s paresseuses et des propri√©t√©s observables.</p><p><a href="https://play.kotlinlang.org/#eyJ2ZXJzaW9uIjoiMS43LjEwIiwicGxhdGZvcm0iOiJqYXZhIiwiYXJncyI6IiIsIm5vbmVNYXJrZXJzIjp0cnVlLCJ0aGVtZSI6ImlkZWEiLCJjb2RlIjoiaW1wb3J0IGtvdGxpbi5yYW5kb20uUmFuZG9tXG5pbXBvcnQga290bGluLnByb3BlcnRpZXMuRGVsZWdhdGVzXG5pbXBvcnQga290bGluLnJlZmxlY3QuS1Byb3BlcnR5XG5cbmNsYXNzIFN1cGVySGVybyB7XG4gICAgdmFsIHJhbmRvbVN0cmVuZ3RoOiBJbnQgYnkgbGF6eSB7XG4gICAgICAgIHByaW50bG4oXCJjb21wdXRlZFwiKVxuICAgICAgICBSYW5kb20ubmV4dEludCg1MCwgMTAwKVxuICAgIH1cbiAgICBcbiAgICB2YXIgcG93ZXJOYW1lOiBTdHJpbmcgYnkgRGVsZWdhdGVzLm9ic2VydmFibGUoXCJMYXNlclwiKSB7IF8sIG9sZCwgbmV3IC0+XG4gICAgICAgIHByaW50bG4oXCJDaGFuZ2VkIHBvd2VyIGZyb20gJG9sZCB0byAkbmV3XCIpXG4gICAgfVxuICAgIFxuICAgIHZhciBjb2RlTmFtZTogU3RyaW5nIGJ5IENhcGl0YWxpemVEZWxlZ2F0ZSgpXG59XG5cbmNsYXNzIENhcGl0YWxpemVEZWxlZ2F0ZXtcbiAgICB2YXIgdXBwZXJjYXNlZCA9IFwiXCJcbiAgICBvcGVyYXRvciBmdW4gZ2V0VmFsdWUodGhpc1JlZjogQW55PywgcHJvcGVydHk6IEtQcm9wZXJ0eTwqPik6IFN0cmluZyB7XG4gICAgICAgIHByaW50bG4oXCIkdGhpc1JlZiwgdGhhbmsgeW91IGZvciBkZWxlZ2F0aW5nICcke3Byb3BlcnR5Lm5hbWV9JyB0byBtZSFcIilcbiAgICAgICAgcmV0dXJuIHVwcGVyY2FzZWRcbiAgICB9XG5cbiAgICBvcGVyYXRvciBmdW4gc2V0VmFsdWUodGhpc1JlZjogQW55PywgcHJvcGVydHk6IEtQcm9wZXJ0eTwqPiwgdmFsdWU6IFN0cmluZykge1xuICAgICAgICBwcmludGxuKFwiJyR2YWx1ZScgaGFzIGJlZW4gYXNzaWduZWQgdG8gJyR7cHJvcGVydHkubmFtZX0nIGluICR0aGlzUmVmLlwiKVxuICAgICAgICB1cHBlcmNhc2VkID0gdmFsdWUudXBwZXJjYXNlKClcbiAgICB9XG59XG5cbmZ1biBtYWluKCkge1xuICAgdmFsIHN1cGVyTGFuZGVyID0gU3VwZXJIZXJvKClcbiAgIHByaW50bG4oc3VwZXJMYW5kZXIucmFuZG9tU3RyZW5ndGgpXG4gICBwcmludGxuKHN1cGVyTGFuZGVyLnJhbmRvbVN0cmVuZ3RoKVxuICAgXG4gICBzdXBlckxhbmRlci5wb3dlck5hbWUgPSBcInNwZWVkXCJcbiAgICBcbiAgICBzdXBlckxhbmRlci5jb2RlTmFtZSA9IFwic3VwZXJsYW5kZXJcIlxuICAgIHByaW50bG4oc3VwZXJMYW5kZXIuY29kZU5hbWUpXG59In0=" target="_blank" rel="noopener noreferrer">‚ñ∂Ô∏è this code</a> illustrates delegate properties.</p><h2 id="concurrence-et-coroutines" tabindex="-1"><a class="header-anchor" href="#concurrence-et-coroutines"><span>Concurrence et coroutines</span></a></h2><p>Kotlin fournit un mod√®le de concurrence de haut niveau appel√© <em>Coroutines</em>. Le d√©veloppeur peut d√©l√©guer la gestion des threads au compilateur et √† l&#39;ex√©cution et utiliser des constructions de niveau sup√©rieur aux threads pour exprimer des op√©rations asynchrones.</p><p>Les coroutines de Kotlin tournent autour de ces concepts :</p><ul><li>Une coroutine est une instance de calcul suspendable. <ul><li>Kotlin a de nombreuses m√©thodes pour cr√©er une coroutine telle que <code>launch</code>.</li></ul></li><li>Une coroutine doit exister dans une port√©e de coroutine. <ul><li>Par exemple, <code>runBlocking</code> cr√©e une port√©e de coroutine dans laquelle les coroutines peuvent √™tre lanc√©es.</li></ul></li><li>Une coroutine peut ex√©cuter des fonctions de suspension qui peuvent suspendre la coroutine mais ne bloquent pas le thread. <ul><li>Par exemple : le <code>delay</code> suspend la coroutine mais ne bloque pas le thread sur lequel elle s&#39;ex√©cute.</li><li>Les fonctions de suspension sont des op√©rations qui peuvent prendre du temps telles que les requ√™tes http et les appels au syst√®me de fichiers.</li></ul></li><li>Le qualificateur <code>suspend</code> d√©finit une fonction de suspension. Il s&#39;ex√©cute dans une coroutine et peut appeler d&#39;autres fonctions de suspension.</li><li><code>Flow</code> permet de g√©n√©rer une liste de valeurs asynchrones.</li><li><code>Deferred</code> et <code>Channel</code> transf√®rent respectivement une valeur unique et un flux de valeurs entre coroutines.</li></ul><p><a href="https://play.kotlinlang.org/#eyJ2ZXJzaW9uIjoiMS43LjEwIiwicGxhdGZvcm0iOiJqYXZhIiwiYXJncyI6IiIsIm5vbmVNYXJrZXJzIjp0cnVlLCJ0aGVtZSI6ImlkZWEiLCJjb2RlIjoiaW1wb3J0IGtvdGxpbnguY29yb3V0aW5lcy4qXG5cbnN1c3BlbmQgZnVuIHJ1blNvbWV0aGluZygpIHtcbiAgICBwcmludGxuKFwic3RhcnRpbmdcIilcbiAgICBkZWxheSg1MDApXG4gICAgcHJpbnRsbihcImZpbmlzaGVkXCIpXG59XG5cbi8vIHJ1bkJsb2NraW5nIGNyZWF0ZXMgYSBDb3JvdXRpbmVTY29wZVxuZnVuIG1haW4oKSA9IHJ1bkJsb2NraW5nIHsgXG4gICAgLy8gbGF1bmNoIGEgbmV3IGNvcm91dGluZVxuICAgIGxhdW5jaCB7IFxuICAgICAgICAvLyBTdXNwZW5kIHRoZSBjb3JvdXRpbmUgYnV0IGRvZXMgbm90IGJsb2NrIHRoZSB0aHJlYWRcbiAgICAgICAgZGVsYXkoMTAwMEwpIFxuICAgICAgICBwcmludGxuKFwiV29ybGQhXCIpIFxuICAgIH1cbiAgICAgICAgXG4gICAgLy8gbWFpbiBjb3JvdXRpbmUgY29udGludWVzIHdoaWxlIGEgcHJldmlvdXMgb25lIGlzIGRlbGF5ZWRcbiAgICBwcmludGxuKFwiSGVsbG9cIikgXG4gICAgXG4gICAgdmFsIGpvYiA9IGxhdW5jaCB7XG4gICAgICAgIHJ1blNvbWV0aGluZygpXG4gICAgfVxuICAgIGpvYi5qb2luKClcbiAgICBydW5Tb21ldGhpbmcoKVxuICAgIFxufSJ9" target="_blank" rel="noopener noreferrer">‚ñ∂Ô∏è this code</a> show how to create a coroutine and suspend function and how to use them.</p><p><a href="https://play.kotlinlang.org/#eyJ2ZXJzaW9uIjoiMS43LjEwIiwicGxhdGZvcm0iOiJqYXZhIiwiYXJncyI6IiIsIm5vbmVNYXJrZXJzIjp0cnVlLCJ0aGVtZSI6ImlkZWEiLCJjb2RlIjoiaW1wb3J0IGtvdGxpbnguY29yb3V0aW5lcy4qXG5pbXBvcnQga290bGlueC5jb3JvdXRpbmVzLmZsb3cuKlxuXG5mdW4gZ2VucmF0ZUFzeW5jUmFuZG9tVmFsdWVzKCk6IEZsb3c8SW50PiA9IGZsb3cgeyBcbiAgICBwcmludGxuKFwiRmxvdyBzdGFydGVkXCIpXG4gICAgZm9yIChpIGluIDAuLjEwKSB7XG4gICAgICAgIGRlbGF5KDEwMClcbiAgICAgICAgZW1pdChpKVxuICAgIH1cbn1cblxuLy8gVGhpcyBjYW4gY2F1c2UgcHJvYmxlbXMgaW4gbm90IGhhbmRsZWRlZCBjb3JyZWN0bHlcbmZ1biBnZW5yYXRlQXN5bmNSYW5kb21WYWx1ZXNJbmZpbml0ZSgpOiBGbG93PEludD4gPSBmbG93IHsgXG4gICAgcHJpbnRsbihcIkZsb3cgc3RhcnRlZFwiKVxuICAgIHZhciBpID0gMFxuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGRlbGF5KDEwMClcbiAgICAgICAgZW1pdChpKVxuICAgICAgICBpICs9IDFcbiAgICB9XG59XG5cblxuXG4vLyBydW5CbG9ja2luZyBjcmVhdGVzIGEgQ29yb3V0aW5lU2NvcGVcbmZ1biBtYWluKCkgPSBydW5CbG9ja2luZzxVbml0PiB7XG4gICAgbGF1bmNoe1xuICAgICAgICBnZW5yYXRlQXN5bmNSYW5kb21WYWx1ZXMoKS5jb2xsZWN0IHtcbiAgICAgICBcdFx0cHJpbnRsbihcIjFzdCBmbG93OiBHb3QgJGl0XCIpXG4gICBcdFx0fVxuICAgIH1cbiAgIFxuICAgbGF1bmNoe1xuICAgICAgIHdpdGhUaW1lb3V0T3JOdWxsKDEwMDApe1xuICAgICAgICAgICBnZW5yYXRlQXN5bmNSYW5kb21WYWx1ZXMoKS5jb2xsZWN0IHtcbiAgICAgICAgICAgcHJpbnRsbihcIjJuZCBmbG93OiBHb3QgJGl0XCIpXG4gICAgICAgICB9XG4gICAgICAgfVxuICAgfVxufSJ9" target="_blank" rel="noopener noreferrer">‚ñ∂Ô∏è this code</a> illustrated flows.</p><p><a href="https://play.kotlinlang.org/#eyJ2ZXJzaW9uIjoiMS43LjEwIiwicGxhdGZvcm0iOiJqYXZhIiwiYXJncyI6IiIsIm5vbmVNYXJrZXJzIjp0cnVlLCJ0aGVtZSI6ImlkZWEiLCJjb2RlIjoiaW1wb3J0IGtvdGxpbnguY29yb3V0aW5lcy4qXG5pbXBvcnQga290bGlueC5jb3JvdXRpbmVzLmNoYW5uZWxzLipcblxuZnVuIG1haW4oKSA9IHJ1bkJsb2NraW5nIHtcbiAgICBcbiAgICAvLyBhc3luYyBsYXVuY2hlcyBhIGNvcm91dGluZXMgYW5kIHJldHVybnMgYSBEZWZlcnJlZDxJbnQ+XG4gICAgdmFsIGRlZmVycmVkID0gYXN5bmMge1xuICAgICAgICA0MlxuICAgIH1cbiAgICBwcmludGxuKGRlZmVycmVkLmF3YWl0KCkpXG5cbiAgICB2YWwgY2hhbm5lbCA9IENoYW5uZWw8SW50PigpXG4gICAgbGF1bmNoIHtcbiAgICAgICAgLy8gdGhpcyBtaWdodCBiZSBoZWF2eSBDUFUtY29uc3VtaW5nIGNvbXB1dGF0aW9uIG9yIGFzeW5jIGxvZ2ljLCB3ZSdsbCBqdXN0IHNlbmQgZml2ZSBzcXVhcmVzXG4gICAgICAgIGZvciAoeCBpbiAxLi41KSBjaGFubmVsLnNlbmQoeCAqIHgpXG4gICAgfVxuICAgIC8vIGhlcmUgd2UgcHJpbnQgZml2ZSByZWNlaXZlZCBpbnRlZ2VyczpcbiAgICByZXBlYXQoNSkgeyBwcmludGxuKGNoYW5uZWwucmVjZWl2ZSgpKSB9XG4gICAgcHJpbnRsbihcIkRvbmUhXCIpXG5cbn0ifQ==" target="_blank" rel="noopener noreferrer">‚ñ∂Ô∏è this code</a> illustrates channels and deferred.</p><h2 id="litteral-de-fonction-avec-recepteur-et-constructeurs-de-type-securise" tabindex="-1"><a class="header-anchor" href="#litteral-de-fonction-avec-recepteur-et-constructeurs-de-type-securise"><span>Litt√©ral de fonction avec r√©cepteur et constructeurs de type s√©curis√©</span></a></h2><p>Comme vu pr√©c√©demment, les extensions de fonctions ajoute du comportement √† des classes existantes sans utiliser l&#39;h√©ritage. √Ä l&#39;int√©rieur de la d√©finition de l&#39;extension de fonction, nous pouvons r√©f√©rencer implicitement le <strong>r√©cepteur d&#39;extension</strong> (<code>this</code>).</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">fun</span> String<span class="token punctuation">.</span><span class="token function">countCharacters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> length <span class="token comment">// or this.length</span></span>
<span class="line"><span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;hello&quot;</span></span><span class="token punctuation">.</span><span class="token function">countCharacters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// prints 5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Nous pouvons d√©finir cette extension avec une fonction litt√©rale (ou lambda) au lieu d&#39;une fonction classique (d√©clar√©e avec <code>fun</code>).</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">var</span> extFn<span class="token operator">:</span> String<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Int</span>
<span class="line">extFn <span class="token operator">=</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token comment">// extFn is a function literal</span></span>
<span class="line"><span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;hello&quot;</span></span><span class="token punctuation">.</span><span class="token function">extFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// prints 5</span></span>
<span class="line"><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">extFn</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;hello&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// prints 5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>extFn</code> <strong>est une fonction litt√©rale</strong> (lambda) qui a acc√®s au <strong>r√©cepteur</strong> (<code>this</code>). C&#39;est pourquoi on l&#39;appelle une <strong>fonction litt√©rale avec r√©cepteur</strong>.</p><p><code>extFn(&quot;hello&quot;)</code> ou <code>extFn(&quot;hello&quot;)</code> appelle l&#39;extension comme pr√©vu par les fonctions d&#39;extension.</p><p>Le type d&#39;une fonction litt√©rale avec r√©cepteur est <code>funName: ReceiverType.(arg1Type, arg2Type, etc.) -&gt; ReturnType</code> et est appel√© avec <code>funName(receiverValue, arg1Value, etc.)</code> ou <code>receiverValue.funName(arg1Value, etc.) .)</code>. Cependant, ce n&#39;est pas l&#39;aspect le plus int√©ressant.</p><p>La partie importante est <code>extFn = { length }</code> qui peut √™tre plac√©e comme argument de fonction dans une fonction d&#39;ordre sup√©rieur. Le d√©veloppeur qui appelle la fonction d&#39;ordre sup√©rieur doit d√©finir <code>extFn</code>, qui √† son tour a acc√®s au r√©cepteur. Cela permet un style de programmation assez int√©ressant.</p><p><a href="https://play.kotlinlang.org/#eyJ2ZXJzaW9uIjoiMS43LjEwIiwicGxhdGZvcm0iOiJqYXZhIiwiYXJncyI6IiIsIm5vbmVNYXJrZXJzIjp0cnVlLCJ0aGVtZSI6ImlkZWEiLCJjb2RlIjoiaW1wb3J0IGtvdGxpbi5yYW5kb20uUmFuZG9tXG5cbmZ1biBtYWluKCkge1xuICAgIC8vIGZuIGlzIGEgZnVuY3Rpb24gbGl0ZXJhbHMgd2l0aCByZWNlaXZlciB0aGF0IHJldHVybnMgYW4gaW50XG4gICAgZnVuIGRvU29tZXRoaW5nV2l0aFJhbmRvbUludChmbjogSW50LigpIC0+IEludCk6IEludCB7XG4gICAgXHR2YWwgcmFuZG9tSW50ID0gUmFuZG9tLm5leHRJbnQoMzIsIDk4KVxuICAgIFx0cmV0dXJuIHJhbmRvbUludC5mbigpXG5cdH1cbiAgICAgXG4gICAgdmFsIHJlc3VsdCA9IGRvU29tZXRoaW5nV2l0aFJhbmRvbUludCB7XG4gICAgICAgIC8vIFRoZSByZWNlaXZlciBpcyBpbXBsaWNpdGx5IGF2YWlsYWJsZSBpbiB0aGlzIGxhbWJkYVxuICAgICAgICBwcmludGxuKFwidGhpczogJHRoaXNcIilcbiAgICAgICAgcHJpbnRsbihcInBsdXM6ICR7cGx1cygxMDApfVwiKVxuICAgICAgICBtaW51cyg1MDApXG4gICAgfVxuICAgIHByaW50bG4oXCJyZXN1bHQgOiAkcmVzdWx0XCIpXG59In0=" target="_blank" rel="noopener noreferrer">‚ñ∂Ô∏è ce code</a> montre un example.</p><p><a href="https://kotlinlang.org/docs/type-safe-builders.htmlhttps://kotlinlang.org/docs/type-safe-builders.html" target="_blank" rel="noopener noreferrer"><strong>Les Type-safe builders</strong></a> combinent les monteurs bien nomm√©es et les fonctions litt√©rales avec r√©cepteur pour cr√©er des monteur avec un typage statique et s√©curis√©. La syntaxe particuli√®re possible avec technique permet de d√©finir une sorte de sous-langage aussi appel√© DSL (domain specific language).</p><div class="hint-container tip"><p class="hint-container-title">Le pattern monteur (Builder)</p><p>Est une technique permettant <a href="https://refactoring.guru/design-patterns/builder" target="_blank" rel="noopener noreferrer">de construire des objects avec une syntaxe √©l√©gante</a>.</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// StirngBuilder uses the builder pattern</span></span>
<span class="line"><span class="token keyword">val</span> text <span class="token operator">=</span> <span class="token function">StringBuilder</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Temp&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;friend&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p><a href="https://play.kotlinlang.org/#eyJ2ZXJzaW9uIjoiMS43LjEwIiwicGxhdGZvcm0iOiJqYXZhIiwiYXJncyI6IiIsIm5vbmVNYXJrZXJzIjp0cnVlLCJ0aGVtZSI6ImlkZWEiLCJjb2RlIjoiY2xhc3MgTWlsa3tcbiAgICB2YXIgYnJhbmQ6IFN0cmluZyA9IFwiXCJcbiAgICB2YXIgcXVhbnRpdHk6IEludCA9IDBcbiAgICBmdW4gYnJhbmQoaGFuZGxlcjogTWlsay4oKS0+IFN0cmluZyl7XG4gICAgICAgIGJyYW5kID0gaGFuZGxlcigpXG4gICAgfVxuICAgIGZ1biBxdWFudGl0eShoYW5kbGVyOiBNaWxrLigpLT5JbnQpe1xuICAgICAgICBxdWFudGl0eSA9IGhhbmRsZXIoKVxuICAgIH1cbiAgICBvdmVycmlkZSBmdW4gdG9TdHJpbmcoKSA9IFwiJHF1YW50aXR5IEwgb2YgbWlsayBmcm9tICRicmFuZFwiXG59XG5cbi8vIHR5cGVzYWZlIGJ1aWxkZXIgZW50cnkgcG9pbnRcbmZ1biBwcm9kdWNlTWlsayhpbml0OiBNaWxrLigpIC0+IFVuaXQpOiBNaWxrIHtcbiAgICB2YWwgbWlsayA9IE1pbGsoKVxuICAgIG1pbGsuaW5pdCgpXG4gICAgcmV0dXJuIG1pbGtcbn1cblxuZnVuIG1haW4oKXtcbiAgICB2YWwgbWlsayA9IHByb2R1Y2VNaWxrIHtcbiAgICAgICAgYnJhbmQgeyBcIlN1cGVyIG1pbGtcIiB9XG4gICAgICAgIHF1YW50aXR5IHsgMTAwIH1cbiAgICB9XG4gICAgcHJpbnRsbihtaWxrKVxufSJ9" target="_blank" rel="noopener noreferrer">Ce code montre</a> un type-safe builder basique.</p><p><a href="https://kotlinlang.org/docs/type-safe-builders.html" target="_blank" rel="noopener noreferrer">Kotlin docs</a> fournit un exemple plus avanc√© d&#39;un monteur de documents HTML.</p><h2 id="exercises" tabindex="-1"><a class="header-anchor" href="#exercises"><span>Exercises</span></a></h2><h3 id="exercise-1" tabindex="-1"><a class="header-anchor" href="#exercise-1"><span>Exercise 1</span></a></h3><ol><li>open the <strong>java-integration-exercise</strong> projects in the <strong>materials</strong> folder.</li><li>Have a look at the Java class we provided you in the <code>src/main/java/com/worldline/learning/kotlin/java2kotlin</code> package. <em>(yes, that&#39;s the Pokemon class)</em></li><li>Convert that Java class in Kotlin using IntelliJ&#39;s awesome copy-pasta tool! <em>(just copy paste the java code in a kotlin file, one is provided at <code>src/main/kotlin/com/worldline/learning/kotlin/java2kotlin</code>)</em></li><li>Have a look at the generated Kotlin code, and note the major differences you spot!</li></ol>`,29)]))}const p=n(l,[["render",c],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/fr/kotlin-features-advanced/","title":"üìö Fonctionnalit√©s avanc√©es de Kotlin","lang":"fr-FR","frontmatter":{},"headers":[{"level":2,"title":"Propri√©t√©s d√©l√©gu√©es","slug":"proprietes-deleguees","link":"#proprietes-deleguees","children":[]},{"level":2,"title":"Concurrence et coroutines","slug":"concurrence-et-coroutines","link":"#concurrence-et-coroutines","children":[]},{"level":2,"title":"Litt√©ral de fonction avec r√©cepteur et constructeurs de type s√©curis√©","slug":"litteral-de-fonction-avec-recepteur-et-constructeurs-de-type-securise","link":"#litteral-de-fonction-avec-recepteur-et-constructeurs-de-type-securise","children":[]},{"level":2,"title":"Exercises","slug":"exercises","link":"#exercises","children":[{"level":3,"title":"Exercise 1","slug":"exercise-1","link":"#exercise-1","children":[]}]}],"git":{"updatedTime":1742570977000,"contributors":[{"name":"yostane","email":"1958676+yostane@users.noreply.github.com","commits":1}]},"filePathRelative":"fr/kotlin-features-advanced/README.md"}');export{p as comp,u as data};
